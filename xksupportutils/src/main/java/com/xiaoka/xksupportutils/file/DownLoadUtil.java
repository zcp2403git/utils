package com.xiaoka.xksupportutils.file;import android.os.AsyncTask;import android.os.Environment;import android.util.Log;import com.xiaoka.xksupportutils.secret.MD5Util;import java.io.File;import java.io.FileNotFoundException;import java.io.FileOutputStream;import java.io.IOException;import java.io.InputStream;import java.net.HttpURLConnection;import java.net.MalformedURLException;import java.net.URL;/** * 下载工具类 * * @author Oracle * */public class DownLoadUtil {	/**	 * 资源根目录	 */	public final static File ROOT = new File(Environment.getExternalStorageDirectory().			getAbsolutePath(), "DDYC");	/**	 * 存放缓存临时目录	 */	public final static File TEMP_CACHE = new File(ROOT, "temp");	public static final int IMAGE = 1;	public static final int VOICE = 2;	public static final int APK = 3;	private final static int RETRY_TIME = 3;	private final static int OUT_TIME = 20000;	// 下载完成	private final static int DOWNLOAD_COMPLETED = 1;	// 下载中	private final static int DOWNLOAD_COMPLETING = 2;	// 下载失败	private final static int DOWNLOAD_FAILE = 3;	private static long fileSize = 0;	private static long downLoadFileSize = 0;	public interface DownLoadListener {		void download(long fileSize, long downLoadFileSize);		void downloadComplete(long fileSize, long downLoadFileSize, String apkFile);		void downloadFaile();	};	/**	 * 下载apk	 *	 * @param url	 */	public static void downloadAPK(final String url,			final DownLoadListener listener) {		new AsyncTask<Void, Void, String>() {			File file = null;			long fileSize = 0;			long downLoadFileSize = 0;			private boolean isSuccess = false;			@Override			protected String doInBackground(Void... params) {				file = new File(TEMP_CACHE, MD5Util.getMD5(url) + ".apk");				if (!TEMP_CACHE.exists()) {					TEMP_CACHE.mkdirs();				}				if (file.exists()) {					file.delete();				}				FileOutputStream outStream;				try {					outStream = new FileOutputStream(file);					HttpURLConnection conn = (HttpURLConnection) new URL(url)							.openConnection();					conn.setConnectTimeout(OUT_TIME);					if (conn.getResponseCode() == 200) {						fileSize = conn.getContentLength();						InputStream inStream = conn.getInputStream();						byte[] buffer = new byte[1024];						int len = 0;						long dvalue = fileSize / 100;						long temp = 0;						while ((len = inStream.read(buffer)) != -1) {							temp += len;							downLoadFileSize = downLoadFileSize + len;							if(temp >= dvalue){								temp=0;								publishProgress();							}							outStream.write(buffer, 0, len);						}						publishProgress();						isSuccess = true;						outStream.close();						inStream.close();						Log.i("info", "" + len);					} else {						isSuccess = false;						file.delete();					}				} catch (FileNotFoundException e) {					e.printStackTrace();					isSuccess = false;				} catch (MalformedURLException e) {					e.printStackTrace();					isSuccess = false;				} catch (IOException e) {					e.printStackTrace();					isSuccess = false;				}				return "";			}			@Override			protected void onPostExecute(String result) {				Log.i("info", "" + isSuccess);				if (isSuccess) {					listener.downloadComplete(fileSize, downLoadFileSize,							file.getAbsolutePath());				} else {					listener.downloadFaile();				}			}			@Override			protected void onProgressUpdate(Void... values) {				listener.download(fileSize, downLoadFileSize);			}		}.execute((Void) null);	}	/**	 * 下载广告图片	 * @param url	 * @return String	 *///	public static void downloadAdvertising(final String url){//		new Thread(){//			@Override//			public void run() {////				File file = null;//				if(!SDCardConstant.ADVERTISING_CACHE.exists()){//					SDCardConstant.ADVERTISING_CACHE.mkdir();//				}//				file = new File(SDCardConstant.ADVERTISING_CACHE, "advertising.jpg");//				if(!SDCardConstant.ADVERTISING_CACHE.exists()){//					SDCardConstant.ADVERTISING_CACHE.mkdir();//				}//				if(file.exists()){//					file.delete();//				}//				int time = 0;//				do{//					try {//						FileOutputStream outStream = new FileOutputStream(file);//						HttpURLConnection conn = (HttpURLConnection) new URL(url).openConnection();//						conn.setConnectTimeout(OUTTIME);//						if (conn.getResponseCode() == 200) {//							InputStream inStream = conn.getInputStream();//							byte[] buffer = new byte[1024];//							int len = 0;//							while ((len = inStream.read(buffer)) != -1) {//								outStream.write(buffer, 0, len);//							}//							outStream.close();//							inStream.close();//							break;//						}//						else{//							time++;//							file.delete();//						}//					} catch (FileNotFoundException e) {////						e.printStackTrace();//						time++;//					} catch (MalformedURLException e) {////						e.printStackTrace();//						time++;//					} catch (IOException e) {////						e.printStackTrace();//						time++;//					}//				}while(time < RETRY_TIME);//			}////		}.start();//	}	/**	 * 下载指定类型的文件	 *	 * @param type	 * @param url	 * @return 返回下载后存放地址	 *///	public static String download(int type, String url) {//		File file = null;//		switch (type) {//		case IMAGE://			file = new File(SDCardConstant.IMG_CACHE, Utils.MD5Helper(url)//					+ ".jpg");//			break;//		case VOICE://			file = new File(SDCardConstant.VOICE_CACHE, Utils.MD5Helper(url)//					+ ".amr");//			break;//		}//		if (!file.exists()) {//			int time = 0;//			do {//				try {//					FileOutputStream outStream = new FileOutputStream(file);//					HttpURLConnection conn = (HttpURLConnection) new URL(url)//							.openConnection();//					conn.setConnectTimeout(OUTTIME);//					if (conn.getResponseCode() == 200) {//						InputStream inStream = conn.getInputStream();//						byte[] buffer = new byte[1024];//						int len = 0;//						while ((len = inStream.read(buffer)) != -1) {//							outStream.write(buffer, 0, len);//						}//						outStream.close();//						inStream.close();//						// handler.sendEmptyMessage(DOWNLOADSUCCESS);//						return file.getAbsolutePath();//					} else {//						time++;//						// handler.sendEmptyMessage(DOWNLOADFAILE);//						file.delete();//						return null;//					}//				} catch (FileNotFoundException e) {////					time++;//					e.printStackTrace();//				} catch (MalformedURLException e) {////					time++;//					e.printStackTrace();//				} catch (IOException e) {////					time++;//					e.printStackTrace();//				}//			} while (time < RETRY_TIME);//		}//		return null;//	}}